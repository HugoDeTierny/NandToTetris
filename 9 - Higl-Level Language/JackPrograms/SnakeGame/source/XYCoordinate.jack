/**
    Snake game is being played on a grid / raster. Each element of a grid is represented by this XYCoordinate class
*/
class XYCoordinate {
    field int x;
    field int y;

    constructor XYCoordinate new(int xposition, int yposition) {
        if(xposition < Constants.getMinGridX() | xposition > Constants.getMaxGridX()) {
            do Sys.error(Errors.getXCoordinateOutOfRangeError());
        }

        if(yposition < Constants.getMinGridY() | yposition > Constants.getMaxGridY()) {
            do Sys.error(Errors.getYCoordinateOutOfRangeError());
        }

        let x = xposition;
        let y = yposition;
        return this;
    }

    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    method int getX() { return x; }

    method int getY() { return y; }

    method void setX(int newX) {
        if(newX < Constants.getMinGridX() | newX > Constants.getMaxGridX()) {
            do Sys.error(Errors.getXCoordinateOutOfRangeError());
        }
        let x = newX;
        return;
    }

    method void setY(int newY) {
        if(newY < Constants.getMinGridY() | newY > Constants.getMaxGridY()) {
            do Sys.error(Errors.getYCoordinateOutOfRangeError());
        }
        let y = newY;
        return;
    }

    method void draw() {
        do Utils.drawBlock(x, y);
        return;
    }

    method boolean equals(XYCoordinate other) {
        return ((x = other.getX()) & (y = other.getY()));
    }

    method void print() {
        do Output.printString(" [X,Y]: ");
        do Output.printInt(x);
        do Output.printString(", ");
        do Output.printInt(y);
        return;
    }
}