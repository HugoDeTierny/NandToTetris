@START
0;JMP
(TRUE)
@SP
A=M
M=-1
@SP
M=M+1
@R13
A=M
0;JMP
(FALSE)
@SP
A=M
M=0
@SP
M=M+1
@R13
A=M
0;JMP
(START)
//function SimpleFunction.test 2
@SP
A=M
M=0
A=A+1
M=0
A=A+1
(SimpleFunction.vm.SimpleFunction.test)
//push local 0
@0
D=A
@LCL
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push local 1
@1
D=A
@LCL
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M
A=A-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//not
@SP
A=M
A=A-1
M=!M
//push argument 0
@0
D=A
@ARG
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//add
@SP
A=M
A=A-1
D=M
A=A-1
M=D+M
@SP
M=M-1
//push argument 1
@1
D=A
@ARG
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M
A=A-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//return
// Tmp variable endframe stock LCL
@LCL
D=M
@SimpleFunction.vm.SimpleFunction.test.endframe
M=D
// get and stock the return address *(LCL-5)
@5
A=D-A
D=M
@SimpleFunction.vm.SimpleFunction.test.returnAddress
M=D
// *ARG = pop()
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// SP = ARG + 1
@ARG
D=M+1
@SP
M=D
 // THAT = *(endframe-1)
@SimpleFunction.vm.SimpleFunction.test.endframe
A=M-1
D=M
@THAT
M=D
// THIS = *(endframe-2)
@SimpleFunction.vm.SimpleFunction.test.endframe
A=M-1
A=A-1
D=M
@THIS
M=D
 // ARG = *(endframe-3)
@SimpleFunction.vm.SimpleFunction.test.endframe
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
 // LCL = *(endframe-4)
@SimpleFunction.vm.SimpleFunction.test.endframe
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
// go to returnAddresseName
@SimpleFunction.vm.SimpleFunction.test.returnAddress
A=M
0;JMP
(END)
@END
0;JMP
