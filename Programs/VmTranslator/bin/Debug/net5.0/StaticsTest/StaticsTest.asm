@261
D=A
@SP
M=D
@Sys.init
0;JMP
(TRUE)
@SP
A=M
M=-1
@SP
M=M+1
@R13
A=M
0;JMP
(FALSE)
@SP
A=M
M=0
@SP
M=M+1
@R13
A=M
0;JMP
//function Class1.set 0
(Class1.set)
@SP
A=M
@0
D=A
@SP
M=D+M
//push argument 0
@0
D=A
@ARG
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Class1.vm.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@1
D=A
@ARG
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Class1.vm.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
// Tmp variable endframe stock LCL
@LCL
D=M
@Class1.set.endframe
M=D
// get and stock the return address *(LCL-5)
@5
A=D-A
D=M
@Class1.set.returnAddress
M=D
// *ARG = pop()
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// SP = ARG + 1
@ARG
D=M+1
@SP
M=D
 // THAT = *(endframe-1)
@Class1.set.endframe
A=M-1
D=M
@THAT
M=D
// THIS = *(endframe-2)
@Class1.set.endframe
A=M-1
A=A-1
D=M
@THIS
M=D
 // ARG = *(endframe-3)
@Class1.set.endframe
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
 // LCL = *(endframe-4)
@Class1.set.endframe
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
// go to returnAddresseName
@Class1.set.returnAddress
A=M
0;JMP
//function Class1.get 0
(Class1.get)
@SP
A=M
@0
D=A
@SP
M=D+M
//push static 0
@Class1.vm.0
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Class1.vm.1
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M
A=A-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//return
// Tmp variable endframe stock LCL
@LCL
D=M
@Class1.get.endframe
M=D
// get and stock the return address *(LCL-5)
@5
A=D-A
D=M
@Class1.get.returnAddress
M=D
// *ARG = pop()
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// SP = ARG + 1
@ARG
D=M+1
@SP
M=D
 // THAT = *(endframe-1)
@Class1.get.endframe
A=M-1
D=M
@THAT
M=D
// THIS = *(endframe-2)
@Class1.get.endframe
A=M-1
A=A-1
D=M
@THIS
M=D
 // ARG = *(endframe-3)
@Class1.get.endframe
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
 // LCL = *(endframe-4)
@Class1.get.endframe
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
// go to returnAddresseName
@Class1.get.returnAddress
A=M
0;JMP
//function Class2.set 0
(Class2.set)
@SP
A=M
@0
D=A
@SP
M=D+M
//push argument 0
@0
D=A
@ARG
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 0
@Class2.vm.0
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push argument 1
@1
D=A
@ARG
D=D+M
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//pop static 1
@Class2.vm.1
D=A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 0
@0
D=A
@SP
A=M
M=D
@SP
M=M+1
//return
// Tmp variable endframe stock LCL
@LCL
D=M
@Class2.set.endframe
M=D
// get and stock the return address *(LCL-5)
@5
A=D-A
D=M
@Class2.set.returnAddress
M=D
// *ARG = pop()
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// SP = ARG + 1
@ARG
D=M+1
@SP
M=D
 // THAT = *(endframe-1)
@Class2.set.endframe
A=M-1
D=M
@THAT
M=D
// THIS = *(endframe-2)
@Class2.set.endframe
A=M-1
A=A-1
D=M
@THIS
M=D
 // ARG = *(endframe-3)
@Class2.set.endframe
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
 // LCL = *(endframe-4)
@Class2.set.endframe
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
// go to returnAddresseName
@Class2.set.returnAddress
A=M
0;JMP
//function Class2.get 0
(Class2.get)
@SP
A=M
@0
D=A
@SP
M=D+M
//push static 0
@Class2.vm.0
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//push static 1
@Class2.vm.1
D=A
@R13
M=D
@R13
A=M
D=M
@SP
A=M
M=D
@SP
M=M+1
//sub
@SP
A=M
A=A-1
D=M
A=A-1
M=M-D
@SP
M=M-1
//return
// Tmp variable endframe stock LCL
@LCL
D=M
@Class2.get.endframe
M=D
// get and stock the return address *(LCL-5)
@5
A=D-A
D=M
@Class2.get.returnAddress
M=D
// *ARG = pop()
@0
D=A
@ARG
D=D+M
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
// SP = ARG + 1
@ARG
D=M+1
@SP
M=D
 // THAT = *(endframe-1)
@Class2.get.endframe
A=M-1
D=M
@THAT
M=D
// THIS = *(endframe-2)
@Class2.get.endframe
A=M-1
A=A-1
D=M
@THIS
M=D
 // ARG = *(endframe-3)
@Class2.get.endframe
A=M-1
A=A-1
A=A-1
D=M
@ARG
M=D
 // LCL = *(endframe-4)
@Class2.get.endframe
A=M-1
A=A-1
A=A-1
A=A-1
D=M
@LCL
M=D
// go to returnAddresseName
@Class2.get.returnAddress
A=M
0;JMP
//function Sys.init 0
(Sys.init)
@SP
A=M
@0
D=A
@SP
M=D+M
//push constant 6
@6
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 8
@8
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class1.set 2
@Sys.init$ret.0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.set
0;JMP
(Sys.init$ret.0)
//pop temp 0
@0
D=A
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//push constant 23
@23
D=A
@SP
A=M
M=D
@SP
M=M+1
//push constant 15
@15
D=A
@SP
A=M
M=D
@SP
M=M+1
//call Class2.set 2
@Sys.init$ret.1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@7
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.set
0;JMP
(Sys.init$ret.1)
//pop temp 0
@0
D=A
@5
D=D+A
@R13
M=D
@SP
M=M-1
A=M
D=M
@R13
A=M
M=D
//call Class1.get 0
@Sys.init$ret.2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class1.get
0;JMP
(Sys.init$ret.2)
//call Class2.get 0
@Sys.init$ret.3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Class2.get
0;JMP
(Sys.init$ret.3)
//label END
(Sys.init$END)
//goto END
@Sys.init$END
0;JMP
(END)
@END
0;JMP
